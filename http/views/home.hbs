<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .product{
            background-color: slateblue;
            border: 2px solid teal;
            min-height: 170px;
            min-width: 210px;
            border-radius: 10px;
            margin: 7px;
            padding: 7px;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="http://localhost:9000/socket.io/socket.io.js"></script>
    <script>

        const url = "http://localhost:9000";
        //const url = "https://aj-hello.azurewebsites.net";
        let loginRespData;

        function connectToSocketIO(){

            var socket = io(url);
                socket.on('connect', function(){
                    console.log("Connected to server..");

                    socket.on('data', function(data){
                        console.log(data);
                    })
                    socket.on('productAdded', function(product){
                        console.log(product);
                        getProducts();
                        const message = `Added Product with id ${product.id}.(Hover to hide)`;
                        $("#addMessagePanel").text(message);
                        $("#addMessagePanel").show()
                    })
                    socket.on('productDeleted', function(productId){
                        console.log("socket deleted",productId);
                        setTimeout(() => {
                            getProducts();
                            const message = `Deleted Product with id ${productId}.(Hover to hide)`;
                            $("#deleteMessagePanel").text(message);
                            $("#deleteMessagePanel").show();
                        }, 500)
                        
                    })
                });

        }
        connectToSocketIO();




        async function login() {

            try {

                var loginUrl = url + "/login";
                var user = { name: "sachin", password: "t_sachin" }
                const loginResp = await fetch(loginUrl, {
                    method: "post",
                    body: JSON.stringify(user),
                    headers: { "Content-Type": "application/json" }
                });
                loginRespData = await loginResp.json();
                console.log(loginRespData);
                getProducts();

            } catch (err) {
                console.log("Error", err);
            }
        }
        login();







        async function getProducts() {

            try {
                var productsUrl = url + "/products";
                const resp = await fetch(productsUrl, {
                    headers: {
                        Authorization: "Bearer " + loginRespData.accessToken
                    }
                });
                const data = await resp.json();
                //console.log(data);
                $("#products").empty();
                for(let product of data){
                    
                    $("#products").append("<div>" 
                                                + "<p>Id: " + product.id + "</p>"
                                                + "<p>Name: " + product.name + "</p>"
                                                + "<p>Price" + product.price + "</p>"
                                                 + "<p>Categoty: " + product.category + "</p>"
                                                 + `<div><button onclick=deleteProduct(${product.id})> Delete </button>`
                                                + "</div>");
                }
                $("#products > div").addClass('product')    

                
            }
            catch (err) {

                console.log("Error", err);

            }
        }
        async function invokeTask() {

            try {
                var url = "http://localhost:9000/task";
                const resp = await fetch(url);
                const data = await resp.json();
                console.log(data);
            } catch (err) {
                console.log("Error", err);
            }
        }
    
        async function refreshToken(){
            try{
                var refreshUrl = url + "/refreshToken";
                const resp = await fetch(refreshUrl, {
                    method: "post",
                    body: JSON.stringify({token: loginRespData.refreshToken}),
                    headers: {
                        "Content-Type": "application/json"
                    }
                });
                const data = await resp.json();
                console.log("new token", data);
                loginRespData.accessToken = data.accessToken;    
            }
            catch(err){

                console.log("Error", err);

            }
        }
        function addNew(){
            $("#addPanel").show();
        }

        async function save(){

            var id= $("#pid").val();
            var name= $("#pname").val();
            var price= $("#pprice").val();
            var category= $("#pcat").val();

            let product = {id: parseInt(id), name, price: parseFloat(price), category};

            try {

                var productsUrl = url + "/products";
                
                const resp = await fetch(productsUrl, {
                    method: "post",
                    body: JSON.stringify(product),
                     headers: {
                        Authorization: "Bearer " + loginRespData.accessToken,
                        "Content-Type": "application/json"
                    }
                    
                });
                //alert("Saved");
               $("fieldset input").val("");     


            } catch (err) {
                alert("Failed to save");
                console.log("Error", err);
            }

        }
        function cancel(){
            $("fieldset input").val("");
            $("#addPanel").hide();

        }
        async function deleteProduct(id){
            console.log("id: " + id);

            try {

                var productsUrl = url + "/products/" + id;
                
                const resp = await fetch(productsUrl, {
                    method: "delete",
                    headers: {
                        Authorization: "Bearer " + loginRespData.accessToken
                       
                    }
                });
                //alert(`Deleted Product with id ${id}`);



            } catch (err) {
                alert("Failed to delete");
                console.log("Error", err);
            }


        }

        $(function(){

            $("#addPanel").hide();
            $("#addMessagePanel").hide();
             $("#deleteMessagePanel").hide();

             $("#addMessagePanel").css("background-color", "yellow");
             $("#deleteMessagePanel").css("background-color", "red");   

             $("#addMessagePanel").hover(() => {
                 $("#addMessagePanel").hide();
             })

             $("#deleteMessagePanel").hover(() => {
                 $("#deleteMessagePanel").hide();
             })
        })

    </script>

</head>

<body>
    <h2>Node Express Application</h2>

    <p>
        {{message}}
    </p>
    <p style="color: brown; font-weight: bold;">
        The token expires in 3 mins. Click of RefreshToken to continue. Watch console for error.     </p>
    <div id="addMessagePanel"> A new product was added (Hover to hide)</div>
    <p></p>
    <div id="deleteMessagePanel"> A product was deleted (Hover to hide)</div>
    <p></p>
    <div>
        <button onclick="getProducts();">Load Products</button>
    </div>
    <br/>
    <div>
        <button onclick="invokeTask();">Invoke Task</button>
    </div>
    <br/>
     <div>
        <button onclick="refreshToken()">Refresh Token</button>
    </div>
    
    <p>
        <button onclick="addNew()">Add New</button>
        <p style="color: blue; font-weight: bold; font-style: normal;">Add a new product from a different window or tab to test out the socket io behavior. The data will be updated automatically</p>
    </p>
    
    <div id="addPanel">
        <fieldset>
            <p><input type="number" id="pid" placeholder="ID"/></p>
            <p><input type="text" id="pname" placeholder="Name"/></p>
            <p><input type="number" id="pprice" placeholder="Price"/></p>
            <p><input type="text" id="pcat" placeholder="Category"/></p>
            <div>
                <button onclick="save()">Save</button>
                &nbsp;
                <button onclick="cancel()">Cancel</button>
            </div>
        </fieldset>
    </div>
    <div id="products" style="display: flex; flex-flow: row wrap; justify-content: center;">

    </div>
</body>

</html>